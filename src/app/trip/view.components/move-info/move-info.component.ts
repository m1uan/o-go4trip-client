// 
// File generated by `npm run generate:blank trip/components.view/move-info/move-info`
//
// After activate you can access from 
//
// http://localhost:5000/#/dev/trip/components.view/move-info/move-info
//
//
// for ACTIVATE please add IMPORT and ROUTE in `src/app/dashboard/dashboard.ts`
//
// /*
//  * Here is router imports
//  */
// import { Move-info } from './trip/components.view/move-info/move-info';
//

import { Component, ViewContainerRef, ElementRef, Input, Output } from '@angular/core';
import { Http, Response, Headers, RequestOptions } from '@angular/http';
import { Observable } from 'rxjs/Rx';
import { Router, ActivatedRoute, Params } from '@angular/router';

import * as numeral from 'numeral';
import * as moment from 'moment';
import * as _ from 'lodash';

import { AlertComponent } from 'ng2-bootstrap/ng2-bootstrap';
import {EviService} from '../../../shared/services/evi.service';

import {TripService} from '../../services/trip.services';

let $ = require('jquery/dist/jquery.js');
let foundation = require('foundation-sites/dist/js/foundation.js');

@Component({
  // The selector is what angular internally uses
  // for `document.querySelectorAll(selector)` in our index.html
  // where, in this case, selector is the string 'home'
  selector: 'g4t-move-info-view',  // <home></home>
  
  styleUrls: [ './move-info.component.scss' ],
  // Every Angular template is first compiled by the browser before Angular runs it's compiler
  templateUrl: './move-info.component.html'
})
export class MoveInfoViewComponent {
 
  @Input('moves') moves : any;
  @Input('fromPlace') fromPlace : any;
  @Input('places') places: Array<any>;
  @Input('index') index: number;
  
  public serverURL = API_SERVER;

  public style: any = {
    height: '100px'
  };

  public imageStyle : any = {
    height: '100px'
  }

  toPlace : any = null;

  info : any = null;

  cachePlace : any = null;

  hours : number = 0;
  minutes: number = 0;

  // TypeScript public modifiers
  constructor(private evi : EviService, private route : ActivatedRoute, private _el: ElementRef, public tripService : TripService ) {
      
  }

  public ngOnInit() {
    let height = Math.round(this.moves.timetake/2);
    this.style.height = height + "px";
    this.style.lineHeight = this.style.height;
    
    
    let imageUrl = 'url(https://res.cloudinary.com/miuan/image/upload/w_250,h_250,c_fill,g_center/'+ this.fromPlace.moves.cache.image_thumb_key;
    this.imageStyle = {
            backgroundImage : imageUrl,
            width:  '250px',
            height: Math.round(height+70) + "px",
            backgroundPosition: 'center',
            backgroundSize: 'crop'
        }
    

    this.hours = Math.floor( this.moves.timetake /60);          
    this.minutes = this.moves.timetake % 60;


  }

  public ngAfterViewInit() {
    //$(this._el.nativeElement.ownerDocument).foundation();
  }
  
  public ngOnChanges(changes: any){
    
    let imageUrl = 'url(https://res.cloudinary.com/miuan/image/upload/w_400,h_225,c_fill,g_center/'+ this.fromPlace;

    console.log('this.fromPlace', this.fromPlace);

    //console.log('ngOnChanges', this.place, this.places);
    for(let i = 0; i < this.places.length; i++){
      let place = this.places[i];

      if(place.id == this.fromPlace.id){
        if(i < this.places.length-1){
          this.toPlace = this.places[i+1];
        } else {
          this.toPlace = this.places[0];
        }
        
        
      }
    }

    this.info = this.fromPlace.infoplace;
    if(this.info){
      this.cachePlace = this.info.place;
    }
    
    this.toInfo = this.toPlace.infoplace;
    if(this.toInfo){
      this.toCachePlace = this.toInfo.place;
    }
    
  }

  addStopOver(){

  }
  


}